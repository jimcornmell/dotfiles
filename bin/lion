#!/usr/bin/env bash
# shellcheck source=/dev/null
. ~/bin/libs/globals.sh

showFile() {
    FILE=$1
    MIME="$(file --dereference --brief --mime-type -- "${FILE}" 2>&1)"
    FULL_NAME="$(realpath "$FILE")"
    # Implement rangers cache filename function.
    HASH=$(echo "from hashlib import sha1
print(sha1('${FULL_NAME}'.encode('utf-8', 'backslashreplace')).hexdigest())" | /usr/bin/python3 -)

    # Rangers image cache = lions image cache.
    FULL_CACHE_NAME="${CACHE_DIR}${HASH}.jpg"

    if $INFO_VERBOSE; then
        setboxwidthfull
        setboxfg $cyan
        outright $cyan "\u2550" " $FILE : $MIME "
    fi

    if [[ "$(basename "${PROGRAM_NAME}")" == "lioness" ]]; then
        scope.sh "${FULL_NAME}" "$W" "$H" "${FULL_CACHE_NAME}" True True True | \
            \bat -p \
            --color=always \
            --theme=jimburn \
            --paging always \
            --style="changes"
    else
        scope.sh "${FULL_NAME}" "$W" "$H" "${FULL_CACHE_NAME}" True True False
    fi
}

PROGRAM_NAME="$0"
W=$(tput cols)
H=$(tput lines)
CACHE_DIR="${XDG_CACHE_HOME}/ranger/"

if [[ ! -d "${CACHE_DIR}" ]]; then
    mkdir -p "${CACHE_DIR}"
fi

case $# in
    0)
        # Read normally into less from stdin.
        less 3<&0
        ;;

    *)
        if [[ $1 == "-n" ]] && (( $# == 3 )); then
            ARGS="$2"
            FILE="$3"
            f=$(basename "$FILE")
            f="/tmp/$f"
            first=true
            IFS=','

            for x in $ARGS
            do
                if [[ $x =~ ^[0-9]+-[0-9]+$ ]]; then
                    if $first; then
                        sed -n "${x/-/,}p" "$FILE" > "$f"
                    else
                        sed -n "${x/-/,}p" "$FILE" >> "$f"
                    fi
                else
                    if $first; then
                        sed -n "${x}p" "$FILE" > "$f"
                    else
                        sed -n "${x}p" "$FILE" >> "$f"
                    fi
                fi

                first=false
            done

            showFile "$f"
        else
            for FILE in "$@"
            do
                if [[ -e "$FILE" ]]; then
                    showFile "$FILE"
                else
                    outnl $red "File missing: $FILE"
                fi
            done
        fi
        ;;
esac

