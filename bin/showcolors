#!/usr/bin/env bash
. ~/bin/libs/globals.sh

RESET=$(printf '\033[0m')
S=$(printf '\033[38;2;')
V=$(printf '\033[48;2;')

resetCol() {
    printf "$RESET"
}

notes() {
    outnonl $yellow "From here: "
    outnl $cyan "https://stackoverflow.com/questions/4842424/list-of-ansi-color-escape-sequences"

    echo "
\\\\033[49m - Reset colour

\\\\033[2K - Clear Line
\\\\033[<L>;<C>H OR \\\\033[<L>;<C>f puts the cursor at line L and column C.
\\\\033[<N>A Move the cursor up N lines
\\\\033[<N>B Move the cursor down N lines
\\\\033[<N>C Move the cursor forward N columns
\\\\033[<N>D Move the cursor backward N columns
\\\\033[2J Clear the screen, move to (0,0)
\\\\033[K Erase to end of line
\\\\033[s Save cursor position
\\\\033[u Restore cursor position

\033[4m\\\\033[4m  Underline on
\033[24m\\\\033[24m Underline off
\033[1m\\\\033[1m  Bold on
\033[2m\\\\033[2m  Bold off
"
}

grid256() {
    outnonl $yellow "256 colour grid: "
    outnl $magenta '\033[48;5;Cm'
    printf "    "

    for c in {0..255}
    do
        printf "%03d=" $c
        tput setab $c
        printf "    "
        tput sgr0
        printf "  "

        if [[ $((($c+1) % 16)) -eq 0 ]]; then
            printf "\n    "
        fi
    done

    echo
    tput sgr0
}


greyscaleRamp() {
    outnonl $yellow "Grayscale: "
    outnl $magenta '\033[48;5;Cm'
    echo -n "    "

    for c in {232..255}
    do
        printf "%03d=\033[48;5;${c}m    " $c
        resetCol
        printf "  "

        if [[ $c -eq 243 ]]; then
            printf "\n    "
        fi
    done

    resetCol
    echo
    echo
}

systemColours() {
    outnonl $yellow "The 16 System Colours: "
    outnl $magenta '\033[XXm'
    outnl $white "     CODE      XX NAME    C     CODE      XX NAME    C"
    printf "    \033[30m \\\\033[30m\033[0m  30 Black   0    \033[90m \\\\033[90m\033[0m  90 Grey    8\n"
    printf "    \033[31m \\\\033[31m\033[0m  31 Red     1    \033[91m \\\\033[91m\033[0m  91 Red     9\n"
    printf "    \033[32m \\\\033[32m\033[0m  32 Green   2    \033[92m \\\\033[92m\033[0m  92 Green   10\n"
    printf "    \033[33m \\\\033[33m\033[0m  33 Yellow  3    \033[93m \\\\033[93m\033[0m  93 Yellow  11\n"
    printf "    \033[34m \\\\033[34m\033[0m  34 Blue    4    \033[94m \\\\033[94m\033[0m  94 Blue    12\n"
    printf "    \033[35m \\\\033[35m\033[0m  35 Magenta 5    \033[95m \\\\033[95m\033[0m  95 Magenta 13\n"
    printf "    \033[36m \\\\033[36m\033[0m  36 Cyan    6    \033[96m \\\\033[96m\033[0m  96 Cyan    14\n"
    printf "    \033[37m \\\\033[37m\033[0m  37 White   7    \033[97m \\\\033[97m\033[0m  97 White   15\n"
    resetCol
    echo

    outnonl $yellow "The 16 System Colours: "
    outnl $magenta '\033[48;5;Cm'
    printf "    "

    for c in {0..15}
    do
        printf "%03d=\033[48;5;${c}m    " $c
        resetCol
        printf "  "

        if [[ $c -eq 7 ]]; then
            printf "\n    "
        fi
    done

    resetCol
    echo
    echo
}

colourCube() {
    outnonl $yellow "Colour cube, 6x6x6: "
    outnl $magenta '\033[48;5;Cm'

    for g in {0..5}
    do
        printf "    "

        for r in {0..5}
        do
            for b in {0..5}
            do
                c=$((16 + ($r * 36) + ($g * 6) + $b))
                printf "\033[48;5;${c}m  ";
            done

            resetCol
            printf " "
        done
        printf "\n"
    done

    echo
}

hexGrid() {
    outnonl $yellow "Hex grid: "
    outnl $magenta '\033[48;2;R;G;Bm'
    printf "    "
    inc=32

    for ((r=0; r<=255; r+=$inc))
    do
        for ((g=0; g<=255; g+=$inc))
        do
            for ((b=0; b<=255; b+=$inc))
            do
                printf "${V}${r};${g};${b}m  "
            done
            resetCol
            printf " "
        done

        printf "\n    "
    done
    echo
}

rgbColourNames() {
    outnonl $yellow "RGB Colour names: "
    outnl $magenta '\033[48;2;R;G;Bm'

    showrgb | while read line
    do
        c=($line)

        if [[ ${#c[@]} -eq 4 ]]; then
            R=${c[0]}
            G=${c[1]}
            B=${c[2]}
            N=${c[3]}
            printf "    %03d %03d %03d " $R $G $B
            printf "${V}${R};${G};${B}m     ${RESET} $N"
            echo
        fi
    done
}

if [[ $1 != -r ]]; then
    notes
    systemColours
    grid256
    greyscaleRamp
    colourCube
    hexGrid
fi

rgbColourNames

